<?xml version="1.0"?>
<project name="fluidnotions-common-tools" default="all" basedir=".">

	<!-- ================================================================== -->
	<!-- Initialization of all property settings                            -->
	<!-- ================================================================== -->

	<target name="init">
		<property environment="env" />
		<property name="desc" value="fluidnotions-common-tools" />
		<property name="name" value="fluidnotions-common-tools" />
		<property name="src.dir" value="src" />
		<property name="dtd.dir" value="dtd" />
		<property name="lib.dir" value="lib" />
		<property name="build.dir" value="build" />
		<!-- This parameter must point to your ofbiz/ directory or the libraries for the financials app would not be found.
         The default setting would work if you have checked out the financials module into your ofbiz/opentaps/ directory.
         It would NOT work if you checked it out somewhere else and symlinked to it in your opentaps/ directory.
         If you experience build problems, put the full path here -->
		<property name="ofbiz.dir" value="../../" />
	</target>

	<target name="classpath">
		<path id="local.class.path">
			<fileset dir="${lib.dir}" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/base/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/base/lib/commons" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/base/lib/j2eespecs" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/base/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/entity/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/entity/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/security/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/service/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/service/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/minilang/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/webapp/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/webapp/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/framework/common/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/party/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/product/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/marketing/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/order/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/content/build/lib" includes="*.jar" />
			<!-- for poi -->
			<fileset dir="${ofbiz.dir}/applications/content/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/applications/accounting/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/opentaps/opentaps-common/build/lib" includes="*.jar" />
			<fileset dir="${ofbiz.dir}/opentaps/opentaps-common/lib" includes="opentaps-common-entities.jar opentaps-common-services.jar" />
			<fileset dir="${ofbiz.dir}/opentaps/opentaps-common/lib/hibernate" includes="*.jar" />
			<!-- point this to your crmsfa installation build/lib -->
			<fileset dir="${ofbiz.dir}/opentaps/crmsfa/build/lib" includes="*.jar" />
		</path>
	</target>

	<!-- ================================================================== -->
	<!-- Removes all created files and directories                          -->
	<!-- ================================================================== -->

	<target name="clean" depends="clean-lib">
		<delete dir="${build.dir}" />
	</target>

	<target name="clean-lib" depends="init">
		<delete dir="${build.dir}/lib" />
	</target>

	<!-- ================================================================== -->
	<!-- Makes sure the needed directory structure is in place              -->
	<!-- ================================================================== -->

	<target name="prepare" depends="clean-lib">
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${build.dir}/lib" />
	</target>

	<!-- ================================================================== -->
	<!-- Compilation of the source files                                                                                                                         -->
	<!-- ================================================================== -->

	<target name="classes" depends="prepare,classpath">
		<javac debug="on" deprecation="on" destdir="${build.dir}/classes">
			<classpath>
				<path refid="local.class.path" />
			</classpath>
			<src path="${src.dir}" />
		</javac>
		<!-- also put the DTDs in the jar file... -->
		<copy todir="${build.dir}/classes">
			<fileset dir="${src.dir}" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py" />
		</copy>
	</target>

	<target name="jar" depends="classes">
		<jar jarfile="${build.dir}/lib/${name}.jar" basedir="${build.dir}/classes" />
	</target>



	<!-- <target name="jar-webapp-lib" depends="classes">
		<copy todir="${build.dir}/classes">
			<fileset dir="${src.dir}" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py" />
		</copy>
		<jar destfile="${build.dir}/lib/${name}-webapp-lib.jar" basedir="${build.dir}/classes" includes="com/groupfio/extension/**,rebel.xml" />
	</target>

	<target name="webapp-lib" depends="jar-webapp-lib">
		<copy file="${build.dir}/lib/${name}-webapp-lib.jar" todir="${ofbiz.dir}/framework/webapp/lib" />
	</target>
 -->


	<!-- ================================================================== -->
	<!-- Build JavaDoc                                                      -->
	<!-- ================================================================== -->



	<target name="all" depends="jar" />
</project>
