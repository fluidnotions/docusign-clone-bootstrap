import javolution.util.FastMap;
import org.ofbiz.base.util.UtilProperties;
import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.util.UtilConfig;
import org.opentaps.common.security.OpentapsSecurity;


// Get userLogin
userLogin = request.getAttribute("userLogin");
if (userLogin == null) { // this should *never* happen
    return;
}
tenantKey = delegator.getDelegatorTenantId();
globalContext.put("tenantKey", tenantKey);
globalContext.put("userLoginId", userLogin.getString("userLoginId"));

context{"userLogin"} = userLogin;
// security
security = request.getAttribute("security"); 
context{"security"} = security;
dataimportSecurity = new OpentapsSecurity(security, userLogin);

// external login key
extLogin = request.getAttribute("externalLoginKey"); 
if (extLogin != null) {
    context{"externalKeyParam"} = "externalLoginKey=" + requestAttributes.get("externalLoginKey");
}

// context path
context{"contextPath"} = request.getContextPath();


// Basic permissions
if (organizationPartyId != null) {
    hasViewPermission = dataimportSecurity.hasPartyRelationSecurity("WEBTOOLS", "_VIEW", null);
    hasAdminPermission = dataimportSecurity.hasPartyRelationSecurity("WEBTOOLS", "_ADMIN", null);
    context{"hasViewPermission"} = (Boolean)hasViewPermission;
    context{"hasAdminPermission"} = (Boolean)hasAdminPermission;
}

